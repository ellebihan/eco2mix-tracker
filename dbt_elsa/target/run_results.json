{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-23T14:50:21.552661Z", "invocation_id": "1ecd6f17-91c6-487d-84ed-06ca4b4a0c96", "invocation_started_at": "2025-07-23T14:50:18.455070Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.196722Z", "completed_at": "2025-07-23T14:50:20.246261Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.250734Z", "completed_at": "2025-07-23T14:50:20.250765Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06412196159362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.daily_global_metrics", "compiled": true, "compiled_code": "/*\nSELECT *\nFROM \"dbelsa\".\"silver\".\"daily_global_metrics\"\nWHERE DATE(created_at) < CURRENT_DATE\nUNION\n*/\nSELECT\n    DATE(date_time_utc) AT time zone 'CET' AS date,\n    created_at,\n    'total' AS sector,\n    SUM(rate_co2) AS rate_co2,\n    SUM(consumption_d) AS consumption_d,\n    SUM(consumption_forecast_d) AS consumption_forecast_d,\n    SUM(consumption_forecast_d1) AS consumption_forecast_d1\nFROM bronze.hourly_global_metrics\nGROUP BY 1, 2, 3", "relation_name": "\"dbelsa\".\"silver\".\"daily_global_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.214348Z", "completed_at": "2025-07-23T14:50:20.247534Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.253411Z", "completed_at": "2025-07-23T14:50:20.253446Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06816697120666504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.daily_production_by_sector", "compiled": true, "compiled_code": "/*\nSELECT *\nFROM \"dbelsa\".\"silver\".\"daily_production_by_sector\"\nWHERE DATE(created_at) < CURRENT_DATE\nUNION\n*/\nSELECT \n    DATE(date_time_utc) AT time zone 'CET' AS date,\n    created_at,\n    unpivot.sector,\n    SUM(unpivot.volume) AS volume\nFROM bronze.hourly_production_by_sector\nJOIN LATERAL(VALUES\n    ('gaz', hourly_production_by_sector.gaz),\n    ('nucleaire', hourly_production_by_sector.nucleaire),\n    ('charbon', hourly_production_by_sector.charbon),\n    ('solaire', hourly_production_by_sector.solaire),\n    ('eolien', hourly_production_by_sector.eolien),\n    ('hydraulique', hourly_production_by_sector.hydraulique),\n    ('bioenergies', hourly_production_by_sector.bioenergies),\n    ('autres', hourly_production_by_sector.autres)\n) unpivot(sector, volume) ON TRUE\nGROUP BY\n    DATE(date_time_utc) AT time zone 'CET',\n    created_at,\n    unpivot.sector", "relation_name": "\"dbelsa\".\"silver\".\"daily_production_by_sector\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.225066Z", "completed_at": "2025-07-23T14:50:20.249583Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.259664Z", "completed_at": "2025-07-23T14:50:20.259691Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.07040548324584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.hourly_eco2mix", "compiled": true, "compiled_code": "SELECT\n    id,\n    created_at,\n    (data->>'date_heure')::timestamp AS date_heure_utc,\n    (data->>'date')::date AS date,\n    (data->>'heure')::time AS heure,\n    (data->>'gaz')::int AS gaz,\n    (data->>'nucleaire')::int AS nucleaire,\n    (data->>'charbon')::int AS charbon,\n    (data->>'solaire')::int AS solaire,\n    (data->>'eolien')::int AS eolien,\n    (data->>'hydraulique')::int AS hydraulique,\n    (data->>'bioenergies')::int AS bioenergies,\n    (data->>'autres')::int AS autres,\n    (data->>'taux_co2')::int AS rate_co2,\n    (data->>'consumption')::int AS consumption_d,\n    (data->>'prevision_j')::int AS consumption_forecast_d,\n    (data->>'prevision_j1')::int AS consumption_forecast_d1\nFROM bronze.rte_eco2mix", "relation_name": "\"dbelsa\".\"bronze\".\"hourly_eco2mix\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.233034Z", "completed_at": "2025-07-23T14:50:20.258272Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.264422Z", "completed_at": "2025-07-23T14:50:20.264443Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.07364797592163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.hourly_global_metrics", "compiled": true, "compiled_code": "/*\nSELECT *\nFROM \"dbelsa\".\"silver\".\"hourly_global_metrics\"\nWHERE DATE(created_at) < CURRENT_DATE\nUNION\n*/\nSELECT\n    date_time_utc,\n    created_at,\n    'total' AS sector,\n    SUM(rate_co2) AS rate_co2,\n    SUM(consumption_d) AS consumption_d,\n    SUM(consumption_forecast_d) AS consumption_forecast_d,\n    SUM(consumption_forecast_d1) AS consumption_forecast_d1\nFROM bronze.hourly_eco2mix\nGROUP BY 1, 2, 3", "relation_name": "\"dbelsa\".\"silver\".\"hourly_global_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.299082Z", "completed_at": "2025-07-23T14:50:20.461078Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.485178Z", "completed_at": "2025-07-23T14:50:20.485202Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2172834873199463, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.test_connection", "compiled": true, "compiled_code": "select current_database() as db, current_schema() as schema", "relation_name": "\"dbelsa\".\"bronze\".\"test_connection\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.337935Z", "completed_at": "2025-07-23T14:50:20.475376Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.486927Z", "completed_at": "2025-07-23T14:50:20.486950Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.22005105018615723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_elsa.hourly_production_by_sector", "compiled": true, "compiled_code": "/*\nSELECT *\nFROM \"dbelsa\".\"silver\".\"hourly_production_by_sector\"\nWHERE DATE(created_at) < CURRENT_DATE\nUNION\n*/\nSELECT \n    date_time_utc,\n    created_at,\n    unpivot.sector,\n    SUM(unpivot.volume) AS volume\nFROM bronze.hourly_eco2mix\nJOIN LATERAL(VALUES\n    ('gaz', hourly_eco2mix.gaz),\n    ('nucleaire', hourly_eco2mix.nucleaire),\n    ('charbon', hourly_eco2mix.charbon),\n    ('solaire', hourly_eco2mix.solaire),\n    ('eolien', hourly_eco2mix.eolien),\n    ('hydraulique', hourly_eco2mix.hydraulique),\n    ('bioenergies', hourly_eco2mix.bioenergies),\n    ('autres', hourly_eco2mix.autres)\n) unpivot(sector, volume) ON TRUE\nGROUP BY\n    date_time_utc,\n    created_at,\n    unpivot.sector", "relation_name": "\"dbelsa\".\"silver\".\"hourly_production_by_sector\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.274921Z", "completed_at": "2025-07-23T14:50:20.489076Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.494095Z", "completed_at": "2025-07-23T14:50:20.494115Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.22113990783691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_columns", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as parent_unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as table_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as resource_type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_columns\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.437694Z", "completed_at": "2025-07-23T14:50:20.495387Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.498965Z", "completed_at": "2025-07-23T14:50:20.498983Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2287578582763672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.data_monitoring_metrics", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n    \n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metric_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metric_type\n\n,\n                \n        cast(123456789.99 as float) as metric_value\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as source_value\n\n,\n                cast('2091-02-17' as timestamp) as bucket_start\n\n,\n                cast('2091-02-17' as timestamp) as bucket_end\n\n,\n                \n        cast(123456789 as integer) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as timestamp) as updated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dimension\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dimension_value\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metric_properties\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"dbelsa\".\"tec_elsa\".\"data_monitoring_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.502053Z", "completed_at": "2025-07-23T14:50:20.529908Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.579651Z", "completed_at": "2025-07-23T14:50:20.579673Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.08373045921325684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_exposures", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as maturity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_columns\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as label\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as raw_queries\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_exposures\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.530890Z", "completed_at": "2025-07-23T14:50:20.604516Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.609459Z", "completed_at": "2025-07-23T14:50:20.609498Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10901331901550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_groups", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_email\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_groups\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.547244Z", "completed_at": "2025-07-23T14:50:20.607029Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.613673Z", "completed_at": "2025-07-23T14:50:20.613701Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09100127220153809, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_invocations", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as text) as invocation_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as job_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as job_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as job_run_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as run_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as run_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as command\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dbt_version\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as elementary_version\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as invocation_vars\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as vars\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_database\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_schema\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as target_profile_name\n\n,\n                \n        cast(123456789 as integer) as threads\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as selected\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as yaml_selector\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as project_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as project_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as env\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as env_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as cause_category\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as cause\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as pull_request_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as git_sha\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as orchestrator\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as dbt_user\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as job_url\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as job_run_url\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as account_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as target_adapter_specific_fields\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_invocations\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.581890Z", "completed_at": "2025-07-23T14:50:20.612351Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.617710Z", "completed_at": "2025-07-23T14:50:20.617728Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.08939576148986816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_metrics", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as label\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as model\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as sql\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.621641Z", "completed_at": "2025-07-23T14:50:20.660976Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.701179Z", "completed_at": "2025-07-23T14:50:20.701211Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09005165100097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_models", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as unique_key\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as incremental_strategy\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as access\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_models\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.655202Z", "completed_at": "2025-07-23T14:50:20.728154Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.732321Z", "completed_at": "2025-07-23T14:50:20.732343Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0823984146118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_seeds", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_seeds\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.677241Z", "completed_at": "2025-07-23T14:50:20.731473Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.735609Z", "completed_at": "2025-07-23T14:50:20.735630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.11539721488952637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_run_results", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as text) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as message\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as resource_type\n\n,\n                \n        cast(123456789.99 as float) as execution_time\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as boolean) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as compiled_code\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as query_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as thread_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as adapter_response\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_run_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.707525Z", "completed_at": "2025-07-23T14:50:20.733907Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.739558Z", "completed_at": "2025-07-23T14:50:20.739587Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.08739352226257324, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_snapshots", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as checksum\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as patch_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as unique_key\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as incremental_strategy\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as access\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_snapshots\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.741281Z", "completed_at": "2025-07-23T14:50:20.767967Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.792880Z", "completed_at": "2025-07-23T14:50:20.792902Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06314635276794434, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_source_freshness_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as source_freshness_execution_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as max_loaded_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as snapshotted_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast(123456789.99 as float) as max_loaded_at_time_ago_in_s\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as compile_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_started_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as warn_after\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as filter\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_source_freshness_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.770704Z", "completed_at": "2025-07-23T14:50:20.835175Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.851956Z", "completed_at": "2025-07-23T14:50:20.851981Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08896589279174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_sources", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as source_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as identifier\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as freshness_filter\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as freshness_description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owner\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_sources\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.795877Z", "completed_at": "2025-07-23T14:50:20.853853Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.860487Z", "completed_at": "2025-07-23T14:50:20.860505Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09476137161254883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_tests", "compiled": true, "compiled_code": "\n\nselect * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as short_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as alias\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as severity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as warn_if\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_params\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_namespace\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_original_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as package_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as original_path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as path\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as generated_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as metadata_hash\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as quality_dimension\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as group_name\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_tests\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.822796Z", "completed_at": "2025-07-23T14:50:20.859674Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.877907Z", "completed_at": "2025-07-23T14:50:20.877930Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10938048362731934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.elementary_test_results", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as text) as id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as model_unique_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as invocation_id\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as database_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as schema_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_type\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_results_description\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as owners\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_results_query\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as test_params\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as severity\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as status\n\n,\n                \n        cast(31474836478 as bigint) as failures\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_short_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as test_alias\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as result_rows\n\n,\n                \n        cast(31474836478 as bigint) as failed_row_count\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"dbelsa\".\"tec_elsa\".\"elementary_test_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.862141Z", "completed_at": "2025-07-23T14:50:20.884069Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.905913Z", "completed_at": "2025-07-23T14:50:20.905955Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.05555272102355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metadata", "compiled": true, "compiled_code": "\n\nSELECT\n    '0.19.0' as dbt_pkg_version", "relation_name": "\"dbelsa\".\"tec_elsa\".\"metadata\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.886188Z", "completed_at": "2025-07-23T14:50:20.918181Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:20.973576Z", "completed_at": "2025-07-23T14:50:20.973605Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09726166725158691, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.schema_columns_snapshot", "compiled": true, "compiled_code": "\n\n\n    select * from (\n            select\n            \n                \n        cast('dummy_string' as varchar(4096)) as column_state_id\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as full_table_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as column_name\n\n,\n                \n        cast('dummy_string' as varchar(4096)) as data_type\n\n,\n                \n        cast (True as boolean) as is_new\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0\n", "relation_name": "\"dbelsa\".\"tec_elsa\".\"schema_columns_snapshot\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.911648Z", "completed_at": "2025-07-23T14:50:21.061625Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.066485Z", "completed_at": "2025-07-23T14:50:21.066509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.18163347244262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-end-0", "compiled": true, "compiled_code": "\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:20.930051Z", "completed_at": "2025-07-23T14:50:21.074153Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.093997Z", "completed_at": "2025-07-23T14:50:21.094016Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.189652681350708, "adapter_response": {}, "message": null, "failures": null, "unique_id": "operation.elementary.elementary-on-run-start-0", "compiled": true, "compiled_code": "\n  \n  \n\n  \n  \n  \n\n  \n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.068399Z", "completed_at": "2025-07-23T14:50:21.100540Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.113380Z", "completed_at": "2025-07-23T14:50:21.113399Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.14161109924316406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_daily_global_metrics_created_at.8f69f68035", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"dbelsa\".\"silver\".\"daily_global_metrics\"\nwhere created_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.101585Z", "completed_at": "2025-07-23T14:50:21.128300Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.141680Z", "completed_at": "2025-07-23T14:50:21.141698Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.05044913291931152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_daily_global_metrics_date.4e43574422", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom \"dbelsa\".\"silver\".\"daily_global_metrics\"\nwhere date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.115216Z", "completed_at": "2025-07-23T14:50:21.140787Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.145229Z", "completed_at": "2025-07-23T14:50:21.145257Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.048403263092041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_daily_production_by_sector_created_at.683082526b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"dbelsa\".\"silver\".\"daily_production_by_sector\"\nwhere created_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.129442Z", "completed_at": "2025-07-23T14:50:21.146856Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.162077Z", "completed_at": "2025-07-23T14:50:21.162098Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.05007529258728027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_daily_production_by_sector_date.976c35a3b9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom \"dbelsa\".\"silver\".\"daily_production_by_sector\"\nwhere date is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.149094Z", "completed_at": "2025-07-23T14:50:21.167925Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.172318Z", "completed_at": "2025-07-23T14:50:21.172337Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.033104896545410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_hourly_global_metrics_created_at.3f9d22bc70", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"dbelsa\".\"silver\".\"hourly_global_metrics\"\nwhere created_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.173863Z", "completed_at": "2025-07-23T14:50:21.209072Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.212704Z", "completed_at": "2025-07-23T14:50:21.212727Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04939913749694824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_hourly_global_metrics_date_time.437de80314", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_time\nfrom \"dbelsa\".\"silver\".\"hourly_global_metrics\"\nwhere date_time is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.183645Z", "completed_at": "2025-07-23T14:50:21.210448Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.215148Z", "completed_at": "2025-07-23T14:50:21.215179Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04997515678405762, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_hourly_production_by_sector_created_at.07d43da7ac", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect created_at\nfrom \"dbelsa\".\"silver\".\"hourly_production_by_sector\"\nwhere created_at is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.197054Z", "completed_at": "2025-07-23T14:50:21.213964Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.262410Z", "completed_at": "2025-07-23T14:50:21.262429Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.09163093566894531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_elsa.not_null_hourly_production_by_sector_date_time.225a204440", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_time\nfrom \"dbelsa\".\"silver\".\"hourly_production_by_sector\"\nwhere date_time is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.217464Z", "completed_at": "2025-07-23T14:50:21.269634Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.273602Z", "completed_at": "2025-07-23T14:50:21.273619Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06547880172729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.metrics_anomaly_score", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"dbelsa\".\"tec_elsa\".\"data_monitoring_metrics\"\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_avg,\n        stddev(cast(metric_value as float)) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by bucket_start asc rows between unbounded preceding and current row) as training_start\n    from data_monitoring_metrics\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and bucket_end >= \n    cast(date_trunc('day', \n    current_timestamp::timestamp\n) as timestamp) + cast(-7 as integer) * INTERVAL '1 day'\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "relation_name": "\"dbelsa\".\"tec_elsa\".\"metrics_anomaly_score\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.275052Z", "completed_at": "2025-07-23T14:50:21.340172Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.343287Z", "completed_at": "2025-07-23T14:50:21.343307Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.07818126678466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.monitors_runs", "compiled": true, "compiled_code": "\n\nwith data_monitoring_metrics as (\n\n    select * from \"dbelsa\".\"tec_elsa\".\"data_monitoring_metrics\"\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           metric_properties,\n           max(bucket_end) as last_bucket_end,\n           min(bucket_end) as first_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3,4\n\n)\n\nselect * from max_bucket_end", "relation_name": "\"dbelsa\".\"tec_elsa\".\"monitors_runs\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.286452Z", "completed_at": "2025-07-23T14:50:21.342164Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.347050Z", "completed_at": "2025-07-23T14:50:21.347069Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.07584953308105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.model_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_run_results\"\n),\n\ndbt_models as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_models\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    run_results.group_name,\n    models.database_name,\n    models.schema_name,\n    coalesce(run_results.materialization, models.materialization) as materialization,\n    models.tags,\n    models.package_name,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias,\n    ROW_NUMBER() OVER (PARTITION BY run_results.unique_id ORDER BY run_results.generated_at DESC) AS model_invocation_reverse_index,\n    CASE WHEN FIRST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_first_invocation_of_the_day,\n    CASE WHEN LAST_VALUE(invocation_id) OVER (PARTITION BY \n    date_trunc('day', cast(run_results.generated_at as timestamp))\n ORDER BY run_results.generated_at ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) = invocation_id\n              THEN TRUE\n              ELSE FALSE \n         END                                                               AS is_the_last_invocation_of_the_day\n    \nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "relation_name": "\"dbelsa\".\"tec_elsa\".\"model_run_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.303009Z", "completed_at": "2025-07-23T14:50:21.346271Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.359995Z", "completed_at": "2025-07-23T14:50:21.360016Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09167075157165527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.job_run_results", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith jobs as (\n  select\n    job_name,\n    job_id,\n    job_run_id,\n    \nmin(cast(run_started_at as timestamp))\n as job_run_started_at,\n    \nmax(cast(run_completed_at as timestamp))\n as job_run_completed_at,\n    \n    \n        (\n        (\n        (\n        ((\nmax(cast(run_completed_at as timestamp))\n)::date - (\nmin(cast(run_started_at as timestamp))\n)::date)\n     * 24 + date_part('hour', (\nmax(cast(run_completed_at as timestamp))\n)::timestamp) - date_part('hour', (\nmin(cast(run_started_at as timestamp))\n)::timestamp))\n     * 60 + date_part('minute', (\nmax(cast(run_completed_at as timestamp))\n)::timestamp) - date_part('minute', (\nmin(cast(run_started_at as timestamp))\n)::timestamp))\n     * 60 + floor(date_part('second', (\nmax(cast(run_completed_at as timestamp))\n)::timestamp)) - floor(date_part('second', (\nmin(cast(run_started_at as timestamp))\n)::timestamp)))\n    \n as job_run_execution_time\n  from \"dbelsa\".\"tec_elsa\".\"dbt_invocations\"\n  where job_id is not null\n  group by job_name, job_id, job_run_id\n)\n\nselect\n  job_name as name,\n  job_id as id,\n  job_run_id as run_id,\n  job_run_started_at as run_started_at,\n  job_run_completed_at as run_completed_at,\n  job_run_execution_time as run_execution_time\nfrom jobs", "relation_name": "\"dbelsa\".\"tec_elsa\".\"job_run_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.350016Z", "completed_at": "2025-07-23T14:50:21.380013Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.384476Z", "completed_at": "2025-07-23T14:50:21.384499Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.043720245361328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.seed_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_run_results\"\n),\n\ndbt_seeds as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_seeds\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    run_results.group_name,\n    seeds.database_name,\n    seeds.schema_name,\n    run_results.materialization,\n    seeds.tags,\n    seeds.package_name,\n    seeds.path,\n    seeds.original_path,\n    seeds.owner,\n    seeds.alias\nFROM dbt_run_results run_results\nJOIN dbt_seeds seeds ON run_results.unique_id = seeds.unique_id", "relation_name": "\"dbelsa\".\"tec_elsa\".\"seed_run_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.368010Z", "completed_at": "2025-07-23T14:50:21.385888Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.411233Z", "completed_at": "2025-07-23T14:50:21.411255Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04838061332702637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.snapshot_run_results", "compiled": true, "compiled_code": "\n\nwith dbt_run_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_run_results\"\n),\n\ndbt_snapshots as (\n    select * from \"dbelsa\".\"tec_elsa\".\"dbt_snapshots\"\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.invocation_id,\n    run_results.query_id,\n    run_results.name,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    run_results.execution_time,\n    run_results.execute_started_at,\n    run_results.execute_completed_at,\n    run_results.compile_started_at,\n    run_results.compile_completed_at,\n    run_results.compiled_code,\n    run_results.adapter_response,\n    run_results.thread_id,\n    run_results.group_name,\n    snapshots.database_name,\n    snapshots.schema_name,\n    coalesce(run_results.materialization, snapshots.materialization) as materialization,\n    snapshots.tags,\n    snapshots.package_name,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "relation_name": "\"dbelsa\".\"tec_elsa\".\"snapshot_run_results\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.386952Z", "completed_at": "2025-07-23T14:50:21.415638Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.419657Z", "completed_at": "2025-07-23T14:50:21.419681Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.05353856086730957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_source_freshness", "compiled": true, "compiled_code": "\n\nwith results as (\n  select * from \"dbelsa\".\"tec_elsa\".\"dbt_source_freshness_results\"\n),\n\nsources as (\n  select * from \"dbelsa\".\"tec_elsa\".\"dbt_sources\"\n)\n\nselect\n  results.source_freshness_execution_id as alert_id,\n  results.max_loaded_at,\n  results.snapshotted_at,\n  cast(results.generated_at as timestamp) as detected_at,\n  results.max_loaded_at_time_ago_in_s,\n  results.status,\n  results.error,\n  results.warn_after,\n  results.error_after,\n  results.filter,\n  sources.unique_id,\n  sources.database_name,\n  sources.schema_name,\n  sources.source_name,\n  sources.identifier,\n  sources.tags,\n  sources.meta,\n  sources.owner,\n  sources.package_name,\n  sources.path,\n  -- These columns below are deprecated. We add them since this view\n  -- was used to be loaded into an incremental model with those columns, their names were later changed\n  -- and Databricks doesn't respect `on_schema_change = 'append_new_columns'` properly, as described here -\n  -- https://docs.databricks.com/en/delta/update-schema.html#automatic-schema-evolution-for-delta-lake-merge\n  results.error_after as freshness_error_after,\n  results.warn_after as freshness_warn_after,\n  results.filter as freshness_filter\nfrom results\njoin sources on results.unique_id = sources.unique_id\nwhere True and lower(status) != 'pass'", "relation_name": "\"dbelsa\".\"tec_elsa\".\"alerts_dbt_source_freshness\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.398632Z", "completed_at": "2025-07-23T14:50:21.417279Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.422856Z", "completed_at": "2025-07-23T14:50:21.422878Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.044449806213378906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.dbt_artifacts_hashes", "compiled": true, "compiled_code": "\n\n\n\n\nselect\n  'dbt_models' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_models\"\n union all \n\nselect\n  'dbt_tests' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_tests\"\n union all \n\nselect\n  'dbt_sources' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_sources\"\n union all \n\nselect\n  'dbt_snapshots' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_snapshots\"\n union all \n\nselect\n  'dbt_metrics' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_metrics\"\n union all \n\nselect\n  'dbt_exposures' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_exposures\"\n union all \n\nselect\n  'dbt_seeds' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_seeds\"\n union all \n\nselect\n  'dbt_columns' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_columns\"\n union all \n\nselect\n  'dbt_groups' as artifacts_model,\n   metadata_hash\nfrom \"dbelsa\".\"tec_elsa\".\"dbt_groups\"\n\n\norder by metadata_hash", "relation_name": "\"dbelsa\".\"tec_elsa\".\"dbt_artifacts_hashes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.424745Z", "completed_at": "2025-07-23T14:50:21.451019Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.461087Z", "completed_at": "2025-07-23T14:50:21.461118Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.047081947326660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_anomaly_detection", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"elementary_test_results\"\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "relation_name": "\"dbelsa\".\"tec_elsa\".\"alerts_anomaly_detection\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.445358Z", "completed_at": "2025-07-23T14:50:21.471043Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.494714Z", "completed_at": "2025-07-23T14:50:21.494733Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.07347655296325684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_tests", "compiled": true, "compiled_code": "\n\nwith elementary_test_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"elementary_test_results\"\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'   and lower(status) != 'skipped'  and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "relation_name": "\"dbelsa\".\"tec_elsa\".\"alerts_dbt_tests\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.465113Z", "completed_at": "2025-07-23T14:50:21.498325Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.503074Z", "completed_at": "2025-07-23T14:50:21.503092Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0590059757232666, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_schema_changes", "compiled": true, "compiled_code": "\n\n\nwith elementary_test_results as (\n    select * from \"dbelsa\".\"tec_elsa\".\"elementary_test_results\"\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_short_name,\n           test_params,\n           severity,\n           status,\n           result_rows\n        from elementary_test_results\n        where True and lower(status) != 'pass'and lower(status) != 'skipped'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "relation_name": "\"dbelsa\".\"tec_elsa\".\"alerts_schema_changes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.479976Z", "completed_at": "2025-07-23T14:50:21.501215Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.505913Z", "completed_at": "2025-07-23T14:50:21.505932Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04751133918762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.test_result_rows", "compiled": true, "compiled_code": "-- indexes are not supported in all warehouses, relevant to postgres only\n\n\n-- depends_on: \"dbelsa\".\"tec_elsa\".\"elementary_test_results\"\nselect * from (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as text) as elementary_test_results_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as text) as result_row\n\n,\n                cast('2091-02-17' as timestamp) as detected_at\n\n,\n                cast('2091-02-17' as timestamp) as created_at\n\n\n        ) as empty_table\n        where 1 = 0", "relation_name": "\"dbelsa\".\"tec_elsa\".\"test_result_rows\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.507484Z", "completed_at": "2025-07-23T14:50:21.539224Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.540958Z", "completed_at": "2025-07-23T14:50:21.540981Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04426693916320801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.anomaly_threshold_sensitivity", "compiled": true, "compiled_code": "\n\nwith metrics_anomaly_score as (\n\n    select * from \"dbelsa\".\"tec_elsa\".\"metrics_anomaly_score\"\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \"is_anomaly_1_5\",\n        case when abs(anomaly_score) >= 2 then true else false end as \"is_anomaly_2\",\n        case when abs(anomaly_score) >= 2.5 then true else false end as \"is_anomaly_2_5\",\n        case when abs(anomaly_score) >= 3 then true else false end as \"is_anomaly_3\",\n        case when abs(anomaly_score) >= 3.5 then true else false end as \"is_anomaly_3_5\",\n        case when abs(anomaly_score) >= 4 then true else false end as \"is_anomaly_4\",\n        case when abs(anomaly_score) >= 4.5 then true else false end as \"is_anomaly_4_5\"\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "relation_name": "\"dbelsa\".\"tec_elsa\".\"anomaly_threshold_sensitivity\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-23T14:50:21.527446Z", "completed_at": "2025-07-23T14:50:21.542605Z"}, {"name": "execute", "started_at": "2025-07-23T14:50:21.543714Z", "completed_at": "2025-07-23T14:50:21.543733Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.039348602294921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.elementary.alerts_dbt_models", "compiled": true, "compiled_code": "\n\nwith error_models as (\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias \n    from \"dbelsa\".\"tec_elsa\".\"model_run_results\"\n  \n    union all\n  \n    select  model_execution_id,\n            unique_id,\n            invocation_id,\n            name,\n            generated_at,\n            status,\n            full_refresh,\n            message,\n            execution_time,\n            execute_started_at,\n            execute_completed_at,\n            compile_started_at,\n            compile_completed_at,\n            compiled_code,\n            database_name,\n            schema_name,\n            materialization,\n            tags,\n            package_name,\n            path,\n            original_path,\n            owner,\n            alias  \n  from \"dbelsa\".\"tec_elsa\".\"snapshot_run_results\"\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       cast(generated_at as timestamp) as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'and lower(status) != 'skipped'", "relation_name": "\"dbelsa\".\"tec_elsa\".\"alerts_dbt_models\"", "batch_results": null}], "elapsed_time": 1.5640008449554443, "args": {"compile": true, "use_colors": true, "version_check": true, "static_parser": true, "populate_cache": true, "log_path": "/opt/airflow/dbt_elsa/logs", "require_nested_cumulative_type_params": false, "favor_state": false, "invocation_command": "dbt docs generate", "require_explicit_package_overrides_for_builtin_materializations": false, "log_file_max_bytes": 10485760, "static": false, "which": "generate", "state_modified_compare_vars": false, "write_json": true, "partial_parse_file_diff": true, "require_batched_execution_for_custom_microbatch_strategy": false, "show_all_deprecations": false, "empty_catalog": false, "validate_macro_args": false, "quiet": false, "state_modified_compare_more_unrendered_values": false, "show_resource_report": false, "defer": false, "require_all_warnings_handled_by_warn_error": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "log_level_file": "debug", "profiles_dir": "/opt/airflow/dbt_elsa", "source_freshness_run_project_hooks": true, "log_format_file": "debug", "cache_selected_only": false, "exclude": [], "use_fast_test_edges": false, "select": [], "log_level": "info", "strict_mode": false, "require_yaml_configuration_for_mf_time_spines": false, "skip_nodes_if_on_run_start_fails": false, "project_dir": "/opt/airflow/dbt_elsa", "printer_width": 80, "require_resource_names_without_spaces": true, "partial_parse": true, "use_colors_file": true, "send_anonymous_usage_stats": true, "macro_debugging": false, "vars": {}, "indirect_selection": "eager", "introspect": true, "log_format": "default", "upload_to_artifacts_ingest_api": false, "print": true}}